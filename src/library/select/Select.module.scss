.select {
  position: relative;
  display: inline-block;

  font-size: 1.125rem;
  font-family: Verdana, Arial, sans-serif;

  box-sizing: border-box;

  padding: 0.1rem 2.5rem 0.2rem 0.5rem;
  width: 13rem;

  cursor: pointer;

  border: 0.2rem solid #000;
  border-radius: 0.4rem;
  box-shadow: 0 0.1rem 0.2rem rgba(0, 0, 0, 0.45);

  /* The first declaration is for browsers that do not support linear gradients. */
  background: #f0f0f0;
  background: linear-gradient(0deg, #e3e3e3, #fcfcfc 50%, #f0f0f0);

  &.active,
  &:focus {
    outline: none;
    box-shadow: 0 0 3px 1px #227755;
  }

  &::after {
    content: "â–¼";
    position: absolute;
    z-index: 1;
    top: 0;
    right: 0;

    box-sizing: border-box;

    height: 100%;
    width: 2rem;
    padding-top: 0.1rem;

    border-left: 0.2rem solid #000;
    border-radius: 0 0.1rem 0.1rem 0;

    background-color: #000;
    color: #fff;
    text-align: center;
  }
}

.value {
  display: inline-block;
  width: 100%;
  overflow: hidden;
  white-space: nowrap;
  text-overflow: ellipsis;
  vertical-align: top;
}

.optList {
  position: absolute;
  top: 100%;
  left: 0;

  z-index: 2;

  list-style: none;
  margin: 0;
  padding: 0;

  box-sizing: border-box;

  /* If the values are smaller than the control, the list of options
     will be as wide as the control itself */
  min-width: 100%;

  /* In case the list is too long, its content will overflow vertically
     (which will add a vertical scrollbar automatically) but never horizontally
     (because we haven't set a width, the list will adjust its width automatically.
     If it can't, the content will be truncated) */
  max-height: 10rem; /* 100px */
  overflow-y: auto;
  overflow-x: hidden;

  border: 0.2rem solid #000;
  border-top-width: 0.1rem;
  border-radius: 0 0 0.4rem 0.4rem;

  box-shadow: 0 0.2rem 0.4rem rgba(0, 0, 0, 0.4);
  background: #f0f0f0;

  &.hidden {
    max-height: 0;
    visibility: hidden;
  }
}

.option {
  padding: 0.2rem 0.3rem; /* 2px 3px */
}

.selected {
  background: #999;
  color: #ffffff;
}

.highlight {
  background: #000;
  color: #ffffff;
}

.hiddenInput {
  position: absolute;
  inset: 0;
  opacity: 0;
  pointer-events: none;
}
